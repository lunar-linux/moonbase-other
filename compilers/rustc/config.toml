# see config.toml.example for more possible options

# Tell x.py the editors have reviewed the content of this file
# and updated it to follow the major changes of the building system,
# so x.py will not warn us to do such a review.
change-id = 127866

[llvm]
# by default, rust will build for a myriad of architectures
targets = "X86"
download-ci-llvm = false
ninja = true

# When using system llvm prefer shared libraries
link-shared = true

[build]
# omit docs to save time and space (default is to build them)
docs = false
compiler-docs = false

# install extended tools: cargo, clippy, etc
extended = true

# Do not query new versions of dependencies online.
locked-deps = true

# Use the source code shipped in the tarball for the dependencies.
# The combination of this and the "locked-deps" entry avoids downloading
# many crates from Internet, and makes the Rustc build more stable.
vendor = true

#tools = [ "cargo", "clippy", "rustdoc", "rustfmt", "rust-analyzer-proc-macro-srv", "analysis", "src",]
# Don't use 'src' for tools, it will stomp on system llvm
tools = [ "cargo", "clippy", "rustdoc", "rustfmt"]

[install]
prefix = "/usr"
docdir = "share/doc/rustc"

[rust]
channel = "stable"
description = "for Lunar-Linux"
optimize = true

# Enable the same optimizations as the official upstream build.
lto = "thin"
codegen-units = 1
lld = false
use-lld = "external"

[target.x86_64-unknown-linux-gnu]
# NB the output of llvm-config (i.e. help options) may be
# dumped to the screen when config.toml is parsed.
llvm-config = "/usr/bin/llvm-config"

[target.i686-unknown-linux-gnu]
# NB the output of llvm-config (i.e. help options) may be
# dumped to the screen when config.toml is parsed.
llvm-config = "/usr/bin/llvm-config"
