          MODULE=udev
         VERSION=088
          SOURCE=$MODULE-$VERSION.tar.bz2
         SOURCE2=udev.rules-2.patch.bz2
	 SOURCE3=05-firmware-088.rules
	 SOURCE4=raid-devfs.sh-udev-088
      SOURCE_URL=http://www.kernel.org/pub/linux/utils/kernel/hotplug/
     SOURCE2_URL=$PATCH_URL/
     SOURCE3_URL=$PATCH_URL/
     SOURCE4_URL=$PATCH_URL/
      SOURCE_VFY=sha1:3a0fcf32aee14c36aa74172ec7d69c0d1b76b9dc
     SOURCE2_VFY=sha1:9d3643958e89a4fd189eeb8d85ec3631087b3743
     SOURCE3_VFY=sha1:134287008fc712920f595d4b1c59029fc3baa928
     SOURCE4_VFY=sha1:44a12035774c2b42b784267d38e61a34aa0b645b
        WEB_SITE=http://www.kernel.org/pub/linux/utils/kernel/hotplug/udev.html
         ENTERED=20040104
         UPDATED=20060322
      MAINTAINER=moe@lunar-linux.org
           PSAFE=no
           SHORT="hotplug and device handling daemon"

cat << EOF
udev is supposed to provide a framework for hotpluggable devices
under linux 2.6.x carrying an event listening daemon that also
creates the necesserary nodes for the hotplugged devices inside
the /dev directory.

Its behaviour can be altered by a set of rules defined in udev(7).
udev superseeds devfs and renders it obsolete. Some of the
differences are:

* udev runs completely in userspace. No kernel interaction especially
  in device naming.
* udev creates a dynamic /dev directory with ever changing device nodes
  that fit your needs and rules
* udev provides LSB standard device names
* udev is also the hotplug handler of the future
EOF   
