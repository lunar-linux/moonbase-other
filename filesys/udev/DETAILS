          MODULE=udev
         VERSION=086
          SOURCE=$MODULE-$VERSION.tar.bz2
         SOURCE2=scsi-devfs.sh.patch
         SOURCE3=udev.rules-1.patch.bz2
	 SOURCE4=05-firmware-085.rules
      SOURCE_URL=http://www.kernel.org/pub/linux/utils/kernel/hotplug/
     SOURCE2_URL=$PATCH_URL/
     SOURCE3_URL=$PATCH_URL/
     SOURCE4_URL=$PATCH_URL/
      SOURCE_VFY=sha1:b1ab0cb88882b8db9e6783539d3fc7b3d06b2d4a
     SOURCE2_VFY=sha1:9fc20cdd3ae95476dc066b2ff20c167f5c41c736
     SOURCE3_VFY=sha1:34cca0d34aed61cb25618fca87a194199d992d34
     SOURCE4_VFY=sha1:30d59242037bb8f9ebec4a367a7ba3cf2422f065
        WEB_SITE=http://www.kernel.org/pub/linux/utils/kernel/hotplug/udev.html
         ENTERED=20040104
         UPDATED=20060228
           PSAFE=no
           SHORT="hotplug and device handling daemon"

cat << EOF
udev is supposed to provide a framework for hotpluggable devices
under linux 2.6.x carrying an event listening daemon that also
creates the necesserary nodes for the hotplugged devices inside
the /dev directory.

Its behaviour can be altered by a set of rules defined in udev(7).
udev superseeds devfs and renders it obsolete. Some of the
differences are:

* udev runs completely in userspace. No kernel interaction especially
  in device naming.
* udev creates a dynamic /dev directory with ever changing device nodes
  that fit your needs and rules
* udev provides LSB standard device names
* udev is also the hotplug handler of the future
EOF   
