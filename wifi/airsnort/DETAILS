          MODULE=airsnort
         VERSION=0.2.7e
          SOURCE=airsnort-$VERSION.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/airsnort-$VERSION
      SOURCE_URL=$SFORGE_URL/airsnort/
      SOURCE_VFY=sha1:311f252793a123d476d98115edb8eb1d9f698a30
        WEB_SITE=http://airsnort.shmoo.com/
         ENTERED=20030107
         UPDATED=20060106
       MAINTAINER=michalsc@email.uc.edu
           SHORT="wireless LAN (WLAN) tool which recovers encryption keys"

cat << EOF
AirSnort is a wireless LAN (WLAN) tool which recovers encryption keys. 
AirSnort operates by passively monitoring transmissions, computing the 
encryption key when enough packets have been gathered. 
802.11b, using the Wired Equivalent Protocol (WEP), is crippled with 
numerous security flaws. Most damning of these is the weakness described 
in "Weaknesses in the Key Scheduling Algorithm of RC4" by Scott Fluhrer, 
Itsik Mantin and Adi Shamir. Adam Stubblefield was the first to implement 
this attack, but he has not made his software public. AirSnort, along with 
WEPCrack, which was released about the same time as AirSnort, are the 
first publicly available implementaions of this attack. 
AirSnort requires approximately 5-10 million encrypted packets to be 
gathered. Once enough packets have been gathered, AirSnort can guess the 
encryption password in under a second. 
EOF
